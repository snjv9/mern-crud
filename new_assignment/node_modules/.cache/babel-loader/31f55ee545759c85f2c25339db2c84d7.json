{"ast":null,"code":"var _jsxFileName = \"/Users/sanjeevchoudhary/Desktop/mern-crud/new_assignment/src/components/create.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const postData = () => {\n    const emp_id = Math.floor(Math.random() * (99999 - 10000)) + 10000;\n    if (firstName === \"\" || lastName === \"\" || email === \"\" || contact.length !== 10) {\n      console.log(\"If statement\");\n    } else {\n      axios.post(`http://localhost:4000/create`, {\n        emp_id,\n        firstName,\n        lastName,\n        email,\n        contact\n      }).then(() => {\n        navigate(\"/\");\n      });\n    }\n  };\n  const onSubmit = data => {};\n  const backHandler = () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: backHandler,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"create-form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"First Name\",\n          onChange: e => setFirstName(e.target.value),\n          type: \"text\",\n          ...register(\"firstName\", {\n            required: true,\n            maxLength: 10\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please check the First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Last Name\",\n          onChange: e => setLastName(e.target.value),\n          type: \"text\",\n          ...register(\"lastName\", {\n            required: true,\n            maxLength: 10\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please check the Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email\",\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please check the Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Contact\",\n          onChange: e => setContact(e.target.value),\n          type: \"number\",\n          ...register(\"contact\", {\n            required: true,\n            minLength: 10,\n            maxLength: 10\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), errors.contact && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Contact must be of 10 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        type: \"submit\",\n        onClick: postData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Create, \"tMfFqy3a5CW5pNgGZa1ra8/AAL0=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","Button","Form","axios","useNavigate","useForm","Create","firstName","setFirstName","lastName","setLastName","email","setEmail","contact","setContact","navigate","register","handleSubmit","formState","errors","postData","emp_id","Math","floor","random","length","console","log","post","then","onSubmit","data","backHandler","e","target","value","required","maxLength","minLength"],"sources":["/Users/sanjeevchoudhary/Desktop/mern-crud/new_assignment/src/components/create.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nconst Create = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const postData = () => {\n    const emp_id = Math.floor(Math.random() * (99999 - 10000)) + 10000;\n    if (\n      firstName === \"\" ||\n      lastName === \"\" ||\n      email === \"\" ||\n      contact.length !== 10\n    ) {\n      console.log(\"If statement\");\n    } else {\n      axios\n        .post(`http://localhost:4000/create`, {\n          emp_id,\n          firstName,\n          lastName,\n          email,\n          contact,\n        })\n        .then(() => {\n          navigate(\"/\");\n        });\n    }\n  };\n  const onSubmit = (data) => {};\n  const backHandler = () => {\n    navigate(\"/\");\n  };\n  return (\n    <div>\n      <Button primary onClick={backHandler}>\n        Back\n      </Button>\n      <Form className=\"create-form\" onSubmit={handleSubmit(onSubmit)}>\n        <Form.Field>\n          <label>First Name</label>\n          <input\n            placeholder=\"First Name\"\n            onChange={(e) => setFirstName(e.target.value)}\n            type=\"text\"\n            {...register(\"firstName\", { required: true, maxLength: 10 })}\n          />\n        </Form.Field>\n        {errors.firstName && <p>Please check the First Name</p>}\n\n        <Form.Field>\n          <label>Last Name</label>\n          <input\n            placeholder=\"Last Name\"\n            onChange={(e) => setLastName(e.target.value)}\n            type=\"text\"\n            {...register(\"lastName\", { required: true, maxLength: 10 })}\n          />\n        </Form.Field>\n        {errors.lastName && <p>Please check the Last Name</p>}\n        <Form.Field>\n          <label>Email</label>\n          <input\n            placeholder=\"Email\"\n            onChange={(e) => setEmail(e.target.value)}\n            type=\"email\"\n            {...register(\"email\", { required: true })}\n          />\n        </Form.Field>\n        {errors.email && <p>Please check the Email</p>}\n\n        <Form.Field>\n          <label>Contact</label>\n          <input\n            placeholder=\"Contact\"\n            onChange={(e) => setContact(e.target.value)}\n            type=\"number\"\n            {...register(\"contact\", {\n              required: true,\n              minLength: 10,\n              maxLength: 10,\n            })}\n          />\n        </Form.Field>\n        {errors.contact && <p>Contact must be of 10 characters</p>}\n\n        <Button color=\"green\" type=\"submit\" onClick={postData}>\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Create;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}